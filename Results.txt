=============================================================

Liczba elementów w strukturze: 500
Ilość wykonań akcji: 1000

Heap_Add (zapełnienie całej struktury): 397 [µs]
Heap_Delete (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 2583 [ns]
Heap_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 515 [ns]

Array_Add_Back (zapełnienie całej struktury): 379 [µs]
Array_Add_Front (zapełnienie całej struktury): 379 [µs]
Array_Add_Spec (dodanie pojedyńczego, losowego elementu do zapełnionej struktury): 1181 [ns]

Array_Delete_Back (wyczyszczenie całej struktury): 431 [µs]
Array_Delete_Front (wyczyszczenie całej struktury): 412 [µs]
Array_Delete_Spec (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 1181 [ns]

Array_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 868 [ns]

List_Add_Back (zapełnienie całej struktury): 28 [µs]
List_Add_Front (zapełnienie całej struktury): 27 [µs]
List_Add_Spec (dodanie pojedyńczego, losowego elementu): 1493 [ns]

List_Delete_Back (wyczyszczenie całej struktury): 11 [µs]
List_Delete_Front (wyczyszczenie całej struktury): 11 [µs]
List_Delete_Spec (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 1511 [ns]

List_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 1630 [ns]

RBTree_Add (zapełnienie całej struktury): 70 [µs]
RBTree_Delete (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 166 [ns]
RBTree_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 74 [ns]

=============================================================

Liczba elementów w strukturze: 1000
Ilość wykonań akcji: 1000

Heap_Add (zapełnienie całej struktury):  1269 [µs]
Heap_Delete (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 5313 [ns]
Heap_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 992 [ns]

Array_Add_Back (zapełnienie całej struktury): 1196 [µs]
Array_Add_Front (zapełnienie całej struktury): 1196 [µs]
Array_Add_Spec (dodanie pojedyńczego, losowego elementu do zapełnionej struktury): 2136 [ns]

Array_Delete_Back (wyczyszczenie całej struktury): 1359 [µs]
Array_Delete_Front (wyczyszczenie całej struktury): 1376 [µs]
Array_Delete_Spec (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 2334 [ns]

Array_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 1794 [ns]

List_Add_Back (zapełnienie całej struktury): 52 [µs]
List_Add_Front (zapełnienie całej struktury): 52 [µs]
List_Add_Spec (dodanie pojedyńczego, losowego elementu): 3535 [ns]

List_Delete_Back (wyczyszczenie całej struktury): 29 [µs]
List_Delete_Front (wyczyszczenie całej struktury): 26 [µs]
List_Delete_Spec (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 3570 [ns]

List_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 3685 [ns]

RBTree_Add (zapełnienie całej struktury): 144 [ns]
RBTree_Delete (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 206 [ns]
RBTree_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 81 [ns]

=============================================================

Liczba elementów w strukturze: 2500
Ilość wykonań akcji: 1000

Heap_Add (zapełnienie całej struktury):  6350 [µs]
Heap_Delete (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 12270 [ns]
Heap_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 2110 [ns]

Array_Add_Back (zapełnienie całej struktury): 6100 [µs]
Array_Add_Front (zapełnienie całej struktury): 6150 [µs]
Array_Add_Spec (dodanie pojedyńczego, losowego elementu do zapełnionej struktury): 5120 [ns]

Array_Delete_Back (wyczyszczenie całej struktury): 6950 [µs]
Array_Delete_Front (wyczyszczenie całej struktury): 6930 [µs]
Array_Delete_Spec (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 5500 [ns]

Array_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 4200 [ns]

List_Add_Back (zapełnienie całej struktury): 120 [µs]
List_Add_Front (zapełnienie całej struktury): 120 [µs]
List_Add_Spec (dodanie pojedyńczego, losowego elementu): 8950 [ns]

List_Delete_Back (wyczyszczenie całej struktury): 60 [µs]
List_Delete_Front (wyczyszczenie całej struktury): 54 [µs]
List_Delete_Spec (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 8880 [ns]

List_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 9680 [ns]

RBTree_Add (zapełnienie całej struktury): 386 [ns]
RBTree_Delete (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 231 [ns]
RBTree_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 130 [ns]

=============================================================

Liczba elementów w strukturze: 3500
Ilość wykonań akcji: 1000

Heap_Add (zapełnienie całej struktury):  13040 [µs]
Heap_Delete (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 18510 [ns]
Heap_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 3080 [ns]

Array_Add_Back (zapełnienie całej struktury): 12210 [µs]
Array_Add_Front (zapełnienie całej struktury): 12520 [µs]
Array_Add_Spec (dodanie pojedyńczego, losowego elementu do zapełnionej struktury): 7580 [ns]

Array_Delete_Back (wyczyszczenie całej struktury): 13600 [µs]
Array_Delete_Front (wyczyszczenie całej struktury): 13510 [µs]
Array_Delete_Spec (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 7640 [ns]

Array_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 5990 [ns]

List_Add_Back (zapełnienie całej struktury): 170 [µs]
List_Add_Front (zapełnienie całej struktury): 170 [µs]
List_Add_Spec (dodanie pojedyńczego, losowego elementu): 13900 [ns]

List_Delete_Back (wyczyszczenie całej struktury): 80 [µs]
List_Delete_Front (wyczyszczenie całej struktury): 80 [µs]
List_Delete_Spec (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 13430 [ns]

List_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 13620 [ns]

RBTree_Add (zapełnienie całej struktury): 605 [ns]
RBTree_Delete (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 354 [ns]
RBTree_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 140 [ns]

=============================================================

Liczba elementów w strukturze: 5000
Ilość wykonań akcji: 1000

Heap_Add (zapełnienie całej struktury):  24400 [µs]
Heap_Delete (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 25000 [ns]
Heap_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 4300 [ns]

Array_Add_Back (zapełnienie całej struktury): 24000 [µs]
Array_Add_Front (zapełnienie całej struktury): 24300 [µs]
Array_Add_Spec (dodanie pojedyńczego, losowego elementu do zapełnionej struktury): 11000 [ns]

Array_Delete_Back (wyczyszczenie całej struktury): 27200 [µs]
Array_Delete_Front (wyczyszczenie całej struktury): 27400 [µs]
Array_Delete_Spec (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 11700 [ns]

Array_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 8500 [ns]

List_Add_Back (zapełnienie całej struktury): 200 [µs]
List_Add_Front (zapełnienie całej struktury): 200 [µs]
List_Add_Spec (dodanie pojedyńczego, losowego elementu): 20100 [ns]

List_Delete_Back (wyczyszczenie całej struktury): 100 [µs]
List_Delete_Front (wyczyszczenie całej struktury): 100 [µs]
List_Delete_Spec (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 21400 [ns]

List_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 21300 [ns]

RBTree_Add (zapełnienie całej struktury): 872[ns]
RBTree_Delete (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 449 [ns]
RBTree_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 146 [ns]

=============================================================

Liczba elementów w strukturze: 7500
Ilość wykonań akcji: 1000

Heap_Add (zapełnienie całej struktury):  53700 [µs]
Heap_Delete (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 36800 [ns]
Heap_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 6600 [ns]

Array_Add_Back (zapełnienie całej struktury): 54400 [µs]
Array_Add_Front (zapełnienie całej struktury): 54500 [µs]
Array_Add_Spec (dodanie pojedyńczego, losowego elementu do zapełnionej struktury): 16200 [ns]

Array_Delete_Back (wyczyszczenie całej struktury): 62300 [µs]
Array_Delete_Front (wyczyszczenie całej struktury): 61600 [µs]
Array_Delete_Spec (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 17200 [ns]

Array_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 13100 [ns]

List_Add_Back (zapełnienie całej struktury): 300 [µs]
List_Add_Front (zapełnienie całej struktury): 300 [µs]
List_Add_Spec (dodanie pojedyńczego, losowego elementu): 36700 [ns]

List_Delete_Back (wyczyszczenie całej struktury): 200 [µs]
List_Delete_Front (wyczyszczenie całej struktury): 190 [µs]
List_Delete_Spec (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 36000 [ns]

List_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 33600 [ns]

RBTree_Add (zapełnienie całej struktury): 1402 [ns]
RBTree_Delete (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 515 [ns]
RBTree_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 169 [ns]
