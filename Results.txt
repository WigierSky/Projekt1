=============================================================

Liczba elementów w strukturze: 1000
Ilość wykonań akcji: 1000

Heap_Add (zapełnienie całej struktury):  1269 [µs]
Heap_Delete (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 5313 [ns]
Heap_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 992 [ns]

Array_Add_Back (zapełnienie całej struktury): 1196 [µs]
Array_Add_Front (zapełnienie całej struktury): 1196 [µs]
Array_Add_Spec (dodanie pojedyńczego, losowego elementu do zapełnionej struktury): 2136 [ns]

Array_Delete_Back (wyczyszczenie całej struktury): 1359 [µs]
Array_Delete_Front (wyczyszczenie całej struktury): 1376 [µs]
Array_Delete_Spec (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 2334 [ns]

Array_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 1794 [ns]

List_Add_Back (zapełnienie całej struktury): 52 [µs]
List_Add_Front (zapełnienie całej struktury): 52 [µs]
List_Add_Spec (dodanie pojedyńczego, losowego elementu): 3535 [ns]

List_Delete_Back (wyczyszczenie całej struktury): 29 [µs]
List_Delete_Front (wyczyszczenie całej struktury): 26 [µs]
List_Delete_Spec (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 3570 [ns]

List_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 3685 [ns]

RBTree_Add (zapełnienie całej struktury): 144 [ns]
RBTree_Delete (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 206 [ns]
RBTree_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 81 [ns]

=============================================================

Liczba elementów w strukturze: 3000
Ilość wykonań akcji: 1000

Heap_Add (zapełnienie całej struktury):  7830 [µs]
Heap_Delete (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 14340 [ns]
Heap_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 2570 [ns]

Array_Add_Back (zapełnienie całej struktury): 8630 [µs]
Array_Add_Front (zapełnienie całej struktury): 8750 [µs]
Array_Add_Spec (dodanie pojedyńczego, losowego elementu do zapełnionej struktury): 6090 [ns]

Array_Delete_Back (wyczyszczenie całej struktury): 9960 [µs]
Array_Delete_Front (wyczyszczenie całej struktury): 10010 [µs]
Array_Delete_Spec (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 6490 [ns]

Array_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 5020 [ns]

List_Add_Back (zapełnienie całej struktury): 142 [µs]
List_Add_Front (zapełnienie całej struktury): 140 [µs]
List_Add_Spec (dodanie pojedyńczego, losowego elementu): 11810 [ns]

List_Delete_Back (wyczyszczenie całej struktury): 65 [µs]
List_Delete_Front (wyczyszczenie całej struktury): 67 [µs]
List_Delete_Spec (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 10840 [ns]

List_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 10960 [ns]

RBTree_Add (zapełnienie całej struktury): 490 [ns]
RBTree_Delete (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 367 [ns]
RBTree_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 121 [ns]

=============================================================

Liczba elementów w strukturze: 5000
Ilość wykonań akcji: 1000

Heap_Add (zapełnienie całej struktury):  24400 [µs]
Heap_Delete (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 25000 [ns]
Heap_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 4300 [ns]

Array_Add_Back (zapełnienie całej struktury): 24000 [µs]
Array_Add_Front (zapełnienie całej struktury): 24300 [µs]
Array_Add_Spec (dodanie pojedyńczego, losowego elementu do zapełnionej struktury): 11000 [ns]

Array_Delete_Back (wyczyszczenie całej struktury): 27200 [µs]
Array_Delete_Front (wyczyszczenie całej struktury): 27400 [µs]
Array_Delete_Spec (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 11700 [ns]

Array_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 8500 [ns]

List_Add_Back (zapełnienie całej struktury): 200 [µs]
List_Add_Front (zapełnienie całej struktury): 200 [µs]
List_Add_Spec (dodanie pojedyńczego, losowego elementu): 20100 [ns]

List_Delete_Back (wyczyszczenie całej struktury): 100 [µs]
List_Delete_Front (wyczyszczenie całej struktury): 100 [µs]
List_Delete_Spec (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 21400 [ns]

List_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 21300 [ns]

RBTree_Add (zapełnienie całej struktury): 872[ns]
RBTree_Delete (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 449 [ns]
RBTree_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 146 [ns]

=============================================================

Liczba elementów w strukturze: 7000
Ilość wykonań akcji: 1000

Heap_Add (zapełnienie całej struktury): 45600 [µs]
Heap_Delete (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 32200 [ns]
Heap_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 5800 [ns]

Array_Add_Back (zapełnienie całej struktury): 46400 [µs]
Array_Add_Front (zapełnienie całej struktury): 45700 [µs]
Array_Add_Spec (dodanie pojedyńczego, losowego elementu do zapełnionej struktury): 14000 [ns]

Array_Delete_Back (wyczyszczenie całej struktury): 52400 [µs]
Array_Delete_Front (wyczyszczenie całej struktury): 52400 [µs]
Array_Delete_Spec (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 14500 [ns]

Array_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 11600 [ns]

List_Add_Back (zapełnienie całej struktury): 280 [µs]
List_Add_Front (zapełnienie całej struktury): 281 [µs]
List_Add_Spec (dodanie pojedyńczego, losowego elementu): 29600 [ns]

List_Delete_Back (wyczyszczenie całej struktury): 140 [µs]
List_Delete_Front (wyczyszczenie całej struktury): 142 [µs]
List_Delete_Spec (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 27500 [ns]

List_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 28000 [ns]

RBTree_Add (zapełnienie całej struktury): 1200 [ns]
RBTree_Delete (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 602 [ns]
RBTree_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 169 [ns]

=============================================================

Liczba elementów w strukturze: 10000
Ilość wykonań akcji: 1000

Heap_Add (zapełnienie całej struktury): 96000 [µs]
Heap_Delete (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 48000 [ns]
Heap_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 7600 [ns]

Array_Add_Back (zapełnienie całej struktury): 79000 [µs]
Array_Add_Front (zapełnienie całej struktury): 77000 [µs]
Array_Add_Spec (dodanie pojedyńczego, losowego elementu do zapełnionej struktury): 20000 [ns]

Array_Delete_Back (wyczyszczenie całej struktury): 92000 [µs]
Array_Delete_Front (wyczyszczenie całej struktury): 93000 [µs]
Array_Delete_Spec (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 20000 [ns]

Array_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 15000 [ns]

List_Add_Back (zapełnienie całej struktury): 480 [µs]
List_Add_Front (zapełnienie całej struktury): 480 [µs]
List_Add_Spec (dodanie pojedyńczego, losowego elementu): 53790 [ns]

List_Delete_Back (wyczyszczenie całej struktury): 240 [µs]
List_Delete_Front (wyczyszczenie całej struktury): 250 [µs]
List_Delete_Spec (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 42230 [ns]

List_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 42000 [ns]

RBTree_Add (zapełnienie całej struktury): 1870 [ns]
RBTree_Delete (usunięcie pojedyńczego, losowego elementu z zapełnionej struktury): 800 [ns]
RBTree_Find (wyszukanie pojedyńczego, losowego elementu z zapełnionej struktury): 173 [ns]
